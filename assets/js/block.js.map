{"version":3,"file":"block.js","mappings":"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","sources":["webpack://thrivedx-test-plugin/external window \"React\"","webpack://thrivedx-test-plugin/external window [\"wp\",\"blockEditor\"]","webpack://thrivedx-test-plugin/external window [\"wp\",\"blocks\"]","webpack://thrivedx-test-plugin/external window [\"wp\",\"components\"]","webpack://thrivedx-test-plugin/webpack/bootstrap","webpack://thrivedx-test-plugin/webpack/runtime/compat get default export","webpack://thrivedx-test-plugin/webpack/runtime/define property getters","webpack://thrivedx-test-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://thrivedx-test-plugin/webpack/runtime/make namespace object","webpack://thrivedx-test-plugin/./src/block.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { TextControl, DatePicker, Button, ColorPicker, SelectControl } from '@wordpress/components';\nimport { MediaUpload, InspectorControls, useBlockProps } from '@wordpress/block-editor';\n\n/**\n *\n * Here I'm using the React Extended for Gutenberg Blocks\n *\n *\n */\n\nregisterBlockType('thrivedx-test-plugin/custom-fields-block', {\n    title: 'Custom Fields Block',\n    icon: 'list-view',\n    category: 'design',\n    attributes: {\n        customText: {\n            type: 'string',\n            default: '',\n        },\n        customDate: {\n            type: 'string',\n            default: '',\n        },\n        customImage: {\n            type: 'string',\n            default: '',\n        },\n        textColor: {\n            type: 'string',\n            default: '#000000',\n        },\n        imageClass: {\n            type: 'string',\n            default: 'default-image-class',\n        },\n    },\n    edit: ({ attributes, setAttributes }) => {\n        const blockProps = useBlockProps();\n        const { customText, customDate, customImage, textColor, imageClass } = attributes;\n\n        const onSelectImage = (media) => {\n            setAttributes({ customImage: media.url });\n        };\n\n        // formating the date to be human reading\n        function formatDate(isoDateString) {\n            if (!isoDateString) return '';\n\n            const date = new Date(isoDateString);\n            const month = `${date.getMonth() + 1}`.padStart(2, '0');\n            const day = `${date.getDate()}`.padStart(2, '0');\n            const year = date.getFullYear();\n\n            return `${month}-${day}-${year}`;\n        }\n\n        // The custom Fields for the data in the plugin. Added customization for image and text, chosing a border radius for image and color for text. Just as an example in how build it\n        return (\n            <div {...blockProps}>\n                <InspectorControls>\n                    <div className=\"flex flex-col p-6 w-full\">\n                        <TextControl\n                            label=\"Custom Text\"\n                            value={customText}\n                            onChange={(value) => setAttributes({ customText: value })}\n                        />\n                        <div className=\"mb-6\">\n                            <DatePicker\n                                currentDate={customDate}\n                                onChange={(newDate) => {\n                                    const formattedDate = formatDate(newDate);\n                                    setAttributes({ customDate: formattedDate });\n                                }}\n                            />\n                        </div>\n                        <div className=\"border rounded\">\n                            <MediaUpload\n                                onSelect={onSelectImage}\n                                allowedTypes={['image']}\n                                value={customImage}\n                                render={({ open }) => (\n                                    <Button onClick={open}>Choose Image</Button>\n                                )}\n                            />\n                        </div>\n                        <div className='my-6'>\n                            <p>Custom Text Color</p>\n                            <ColorPicker\n                                color={textColor}\n                                onChangeComplete={(newColor) => setAttributes({ textColor: newColor.hex })}\n                                disableAlpha\n                            />\n                        </div>\n                        <div className='mb-6'>\n                            <SelectControl\n                                label=\"Image Class\"\n                                value={imageClass}\n                                options={[\n                                    { label: 'Default', value: 'default-image-class' },\n                                    { label: 'Rounded', value: 'rounded-image-class' },\n                                    { label: 'Circle', value: 'circle-image-class' },\n                                ]}\n                                onChange={(selectedClass) => setAttributes({ imageClass: selectedClass })}\n                            />\n                        </div>\n                    </div>\n                </InspectorControls>\n                <div>\n                    <p style={{ color:textColor }} className='text-front'>Custom Text: {customText}</p>\n                    <p className='text-front'>Custom Date: {customDate}</p>\n                    {customImage && <img src={customImage} alt=\"Custom\" className={imageClass} />}\n                </div>\n            </div>\n        );\n    },\n    save: ({ attributes }) => {\n        const { customText, customDate, customImage, textColor, imageClass } = attributes;\n        return (\n            <div>\n                <p style={{ color:textColor }} className='text-front'>Custom Text: {customText}</p>\n                <p className='text-front'>Custom Date: {customDate}</p>\n                {customImage && <img src={customImage} alt=\"Custom\" className={imageClass} />}\n            </div>\n        );\n    },\n});\n"],"names":["registerBlockType","TextControl","DatePicker","Button","ColorPicker","SelectControl","MediaUpload","InspectorControls","useBlockProps","title","icon","category","attributes","customText","type","default","customDate","customImage","textColor","imageClass","edit","setAttributes","blockProps","onSelectImage","media","url","formatDate","isoDateString","date","Date","month","getMonth","padStart","day","getDate","year","getFullYear","createElement","className","label","value","onChange","currentDate","newDate","formattedDate","onSelect","allowedTypes","render","open","onClick","color","onChangeComplete","newColor","hex","disableAlpha","options","selectedClass","style","src","alt","save"],"sourceRoot":""}